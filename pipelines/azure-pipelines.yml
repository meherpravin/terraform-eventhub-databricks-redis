trigger:
  branches:
    include:
    - master

stages:
 - stage: DevPlan
   dependsOn: []
   jobs:
   - job: Plan
     steps:
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '1.0.5'

      - task: TerraformTaskV2@2
        displayName: 'Terraform Init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          backendServiceArm: 'test'
          backendAzureRmResourceGroupName: 'test'
          backendAzureRmStorageAccountName: 'test'
          backendAzureRmContainerName: 'state'
          backendAzureRmKey: 'dev.tfstate'
        
      - task: TerraformTaskV2@2
        displayName: 'Terraform Plan'
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          commandOptions: '-var-file="dev.tfvars" -no-color'
          environmentServiceNameAzureRM: 'test'


 - stage: DevApply
   dependsOn: [DevPlan]
   jobs:
   -  deployment: DevApply
      environment: dev
      strategy:
       runOnce:
         deploy:
          steps:
            - task: TerraformInstaller@0
              inputs:
                terraformVersion: '1.0.5'

            - task: TerraformTaskV2@2
              displayName: 'Terraform Init'
              inputs:
                provider: 'azurerm'
                command: 'init'
                workingDirectory: '$(System.DefaultWorkingDirectory)'
                backendServiceArm: 'test'
                backendAzureRmResourceGroupName: 'test'
                backendAzureRmStorageAccountName: 'test'
                backendAzureRmContainerName: 'state'
                backendAzureRmKey: 'dev.tfstate'
              
            - task: TerraformTaskV2@2
              displayName: 'Terraform Plan'
              inputs:
                provider: 'azurerm'
                command: 'plan'
                workingDirectory: '$(System.DefaultWorkingDirectory)'
                commandOptions: '-var-file="dev.tfvars" -no-color'
                environmentServiceNameAzureRM: 'test'

            - task: TerraformTaskV2@2
              displayName: 'Terraform Apply'
              inputs:
                provider: 'azurerm'
                command: 'apply'
                workingDirectory: '$(System.DefaultWorkingDirectory)'
                commandOptions: '-var-file="dev.tfvars" -no-color'
                environmentServiceNameAzureRM: 'test'
